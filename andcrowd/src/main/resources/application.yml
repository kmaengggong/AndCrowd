spring:
  mvc:
    view:
      # JSP
      prefix: /WEB-INF/views/
      suffix: .jsp
  profiles:
    active: jwt, cd, oauth2, bucket, mail
  datasource:
    # DB
    url: ENC(Ucwc5RTGxg4JELzN/vLvd1ttxjr39I8TQCwSWqcJvh28Usn7PHOojAZAHF0rPD4HbBMtXEdnYsWaRCnw19Vf/Stbz28EEqFI7HNVhf5LawDWv+Y2ubUsACNQ85gDgG2XUZSeV+Zi69Pd6OZC/VE+DGserjqYwFdUCj7h/V6UIHk=)
    username: ENC(K6J8J2OV427mm5gg/UUZNAGQ7YCJ8Ab0)
    password: ENC(rT4DVzL9Ssz/ImmSscm0VpybxbM9FT+4)
    driver-class-name: com.mysql.cj.jdbc.Driver
  # JPA
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  # aws
  servlet:
    multipart:
      max-request-size: 50MB
      max-file-size: 50MB

  # oauth2
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope: email, profile
          naver:
            client-id: ${client-id}
            client-secret: ${client-secret}
            redirect-uri: http://localhost:3000/
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response


# JWT
jwt:
  issuer: ${issuer}
  secret_key: ${secret_key}

# Email
mail:
  from_email: ${from_email}
  email_password: ${email_password}

# MyBatis
mybatis:
  mapper-locations: classpath:mybatis/mapper/**/**.xml

# s3 bucket
cloud:
  aws:
    credentials:
      access-key: ENC(9FOmz95F5NWStTIz2g9PVuZZkWCnS/w4DxAjfgdXkcg=)
      secret-key: ENC(HrfUswm81Ul1Ud+O9AeDUNRqcDPeztWMK7dZ9uURAg4QPShHxSdPBUspCLLLiXYvC0icziJqHkM=)
    stack:
      auto: false
    region:
      static: ap-northeast-2
    s3:
      endpoint: https://kr.object.ncloudstorage.com
      #      endpoint: s3.ap-northeast-2.amazonaws.com
      chat-bucket: ENC(FOC6zx1je7l7FAjPa9MmnarhjTbu7qiz)
      and-bucket: ENC(KiJnsDuYOIE6Snu3HhSh5LQ6NswoKgUB)
      crowd-bucket: ENC(TwU+nqA78ILhlHIO6VObGV7FRD7ViO6T)
      user-bucket: ENC(wh+4+HbaUkBSDrqQNR7woxbQbzL6gev7)

# clova chatbot
chatbot:
  secretKey: ${secretKey}
  apiUrl: ${apiUrl}

# Server Auto Reload
#server:
#  devtools:
#    liverload:
#      enabled: true
#    restart:
#      enabled: true