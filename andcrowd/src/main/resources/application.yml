spring:
  mvc:
    view:
      # JSP
      prefix: /WEB-INF/views/
      suffix: .jsp
  profiles:
    active: db, jwt, cd, oauth2, bucket
  datasource:
    # DB
    url: ${url}
    username: ${usrname}
    password: ${password}
    driver-class-name: ${driver-class-name}
  # JPA
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  # aws
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

  # oauth2
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${client-id}
            client-secret: ${client-secret}
            redirect-uri: http://localhost:3000/
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response


# JWT
jwt:
  issuer: ${issuer}
  secret_key: ${secret_key}

# Oauth2


#MyBatis
mybatis:
  mapper-locations: classpath:mybatis/mapper/**/**.xml

# s3 bucket
cloud:
  aws:
    credentials:
      access-key: ${access}
      secret-key: ${secret}
    stack:
      auto: false
    region:
      static: ap-northeast-2
    s3:
      endpoint: https://kr.object.ncloudstorage.com
#      endpoint: s3.ap-northeast-2.amazonaws.com
      chat-bucket: ${chat-bucket}
      and-bucket: ${and-bucket}

# Server Auto Reload
#server:
#  devtools:
#    liverload:
#      enabled: true
#    restart:
#      enabled: true